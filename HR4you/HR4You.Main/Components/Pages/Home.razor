@page "/home"
@using HR4You.Model.Base.Pagination
@attribute [StreamRendering]
@inject HttpClient HttpClient
@rendermode InteractiveServer
@inject IConfiguration Configuration

<PageTitle>Overview</PageTitle>
<div class="page-content min-h-[100vh] p-3 flex flex-col gap-2 select-none">

    <h1 class="text-[2rem] font-bold flex flex-row gap-3 items-center"><i class="fa-solid fa-house"></i>Overview</h1>
    @if (entries == null)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
    else
    {

        @*<HomeTable entries="entries">
    </HomeTable>*@
    }
</div>



@code {
    private string HttpURL;

    public string RequestURL = "/api/master-data/hour-entry/get-user-all?userId=4e2a437c-879f-4b49-b216-0dc4b6470d67";

    public PagedResponseKeySet<HourEntry> entries;//TODO pagination should cover this - remove from here


    protected override async Task OnInitializedAsync()
    {
        //Get first value from appsettings.json "Urls"
        var urls = Configuration["Urls"];
        HttpURL = urls?.Split(';').FirstOrDefault();
        try
        {
            var parameters = new Dictionary<string, string>
            {

            };
            
            
            
            var result = await HttpClient.GetFromJsonAsync<PagedResponseKeySet<HourEntry>>("api/master-data/hour-entry/get-user-all-paged?userId=003c1ae2-acfc-495b-b91a-8cedf507568a&reference=0");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching entries: {ex.Message}");
        }

    }

    private void UpdateEntries(PagedResponseKeySet<HourEntry> newEntries)
    {
        this.entries = newEntries;
    }
}

